apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-nginx
    nginx.ingress.kubernetes.io/auth-signin: https://$host/oauth2/start?rd=$escaped_request_uri
    nginx.ingress.kubernetes.io/auth-url: https://$host/oauth2/auth
    nginx.ingress.kubernetes.io/auth-response-headers: authorization
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/affinity: "cookie"
    nginx.ingress.kubernetes.io/session-cookie-name: "route"
    nginx.ingress.kubernetes.io/session-cookie-expires: "86400"
    nginx.ingress.kubernetes.io/session-cookie-max-age: "86400"
    nginx.ingress.kubernetes.io/proxy-buffer-size: 32k
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
  name: kubernetes-dashboard
  namespace: hakim-kubernetes-dashboard6
spec:
  ingressClassName: nginx
  rules:
  - host: dashboard6.ode.devops-sds.de
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: kubernetes-dashboard
            port:
              number: 443
  tls:
  - hosts:
    - dashboard6.ode.devops-sds.de
    secretName: kubernetes-dashboard-cert
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/proxy-buffer-size: 32k
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
  name: oauth2-proxy
  namespace: hakim-kubernetes-dashboard6
spec:
  ingressClassName: nginx
  rules:
  - host: dashboard6.ode.devops-sds.de 
    http:
      paths:
      - path: /oauth2
        pathType: Prefix
        backend:
          service:
            name: oauth2-proxy
            port:
              number: 80
  tls:
  - hosts:
    - dashboard6.ode.devops-sds.de
    secretName: kubernetes-dashboard-cert
